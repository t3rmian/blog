name: Smoke tests

on:
  status

jobs:
  test:

    runs-on: ubuntu-latest
    
    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444
        options: -v /dev/shm:/dev/shm
        
    steps:
    - run: sudo apt-get -y -qq install jq
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: Debug
      run: git log --oneline -1
    - run: >
        echo $(curl
        --location --request GET 'https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.base_ref }}'
        --header 'Content-Type: application/json'
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
        | jq --raw-output '.[] | select(.state | test("success")) | .target_url')
    - run: >
        echo ::set-env name=SITE_URL::$(curl
        --location --request GET 'https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.base_ref }}'
        --header 'Content-Type: application/json'
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
        | jq --raw-output '.[] | select(.state | test("success")) | .target_url')
    - name: Target URL for deployment test not found
      if: ${{ env.SITE_URL != '' }}
      run: exit 1
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: npm install -g yarn
    - run: yarn install
    - run: yarn test-ci
